import numpy as np


def game_core_v3(number) -> int:
    """Рандомно угадываем число
    
    Args:
        number (int, optional): Загаданное число. Defaults to 1.

    Returns:
        int: Число попыток
    """
    count = 0 # счетчик итераций
    min_num = 1 # минимальное число
    max_num = 101 # максимальное число
    predict_number = np.random.randint(1, 101) # компьютер загадывает число
    
    while number != predict_number:
        if (max_num - min_num) < 2:
            break 
        count += 1
        
        if predict_number > number: # если предсказанное число больше загаданного
            max_num = predict_number
            predict_number = round((max_num + min_num)/2)

        elif predict_number < number: # если предсказанное число меньше загаданного
            min_num = predict_number
            predict_number = round((max_num + min_num)/2)
    
    return count
    
def score_game(game_core_v3)->int:
    """За какое количество попыток в среднем из 1000 подходов угадывает наш алгоритм
    Args:
        game_core_v3([type]): функция угадывания
    Returns:
        int: среднее количество попыток
    """
    count_ls = [] # список для сохранения количества попыток
    np.random.seed(1) # фиксируем сид для воспроизводимости 
    random_array = np.random.randint(1, 101, size=(1000)) # загадываем список чисел
    
    for number in random_array:
        count_ls.append(game_core_v3(number))
        score = int(np.mean(count_ls)) # среднее количество попыток
    print(f"Ваш алгоритм угадывает число в среднемза: {score} попыток")
    return score

score_game(game_core_v3)